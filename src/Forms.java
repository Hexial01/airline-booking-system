import java.awt.Font;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
public class Forms extends javax.swing.JFrame {
    

    private static final String username = "root";
    private static final String password = "Phantomseeker_13";
    private static final String dataConn = "jdbc:mysql://127.0.0.1:3306/dbbookingform";
    
    Connection sqlConn = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    PreparedStatement pst2 = null;
    
    public Forms() {
        initComponents();
        this.setTitle("Booking Request Form");
        
        table_update();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        lblHeader3 = new javax.swing.JLabel();
        lblFN = new javax.swing.JLabel();
        fnTF = new javax.swing.JTextField();
        lblLN = new javax.swing.JLabel();
        lnTF = new javax.swing.JTextField();
        lblADD = new javax.swing.JLabel();
        addTF = new javax.swing.JTextField();
        lblCI = new javax.swing.JLabel();
        ciTF = new javax.swing.JTextField();
        lblCO = new javax.swing.JLabel();
        coTF = new javax.swing.JTextField();
        lblTEL = new javax.swing.JLabel();
        telTF = new javax.swing.JTextField();
        lblPC = new javax.swing.JLabel();
        pcTF = new javax.swing.JTextField();
        lblEM = new javax.swing.JLabel();
        emTF = new javax.swing.JTextField();
        lblF = new javax.swing.JLabel();
        fTF = new javax.swing.JTextField();
        lblHeader4 = new javax.swing.JLabel();
        owtCB = new javax.swing.JCheckBox();
        lblDD = new javax.swing.JLabel();
        lblFLN = new javax.swing.JLabel();
        flnTF = new javax.swing.JTextField();
        lblC = new javax.swing.JLabel();
        lblFR = new javax.swing.JLabel();
        lblT = new javax.swing.JLabel();
        rtCB = new javax.swing.JCheckBox();
        lblAD = new javax.swing.JLabel();
        lblFLNB = new javax.swing.JLabel();
        flnbTF = new javax.swing.JTextField();
        lblCB = new javax.swing.JLabel();
        lblFRB = new javax.swing.JLabel();
        lblTB = new javax.swing.JLabel();
        lblCF = new javax.swing.JLabel();
        lbHeader5 = new javax.swing.JLabel();
        lblNo = new javax.swing.JLabel();
        lblLNB = new javax.swing.JLabel();
        lblFNB = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblNo1 = new javax.swing.JLabel();
        fnb1TF = new javax.swing.JTextField();
        lnb1TF = new javax.swing.JTextField();
        lblNo2 = new javax.swing.JLabel();
        lblNo3 = new javax.swing.JLabel();
        lblNo4 = new javax.swing.JLabel();
        lblNo5 = new javax.swing.JLabel();
        fnb2TF = new javax.swing.JTextField();
        fnb3TF = new javax.swing.JTextField();
        fnb4TF = new javax.swing.JTextField();
        fnb5TF = new javax.swing.JTextField();
        lnb2TF = new javax.swing.JTextField();
        lnb3TF = new javax.swing.JTextField();
        lnb4TF = new javax.swing.JTextField();
        lnb5TF = new javax.swing.JTextField();
        lblN = new javax.swing.JLabel();
        lblBD = new javax.swing.JLabel();
        submitBTN = new javax.swing.JButton();
        clearBTN = new javax.swing.JButton();
        exitBTN = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cfTA = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        nTA = new javax.swing.JTextArea();
        bdDC = new com.toedter.calendar.JDateChooser();
        ddDC = new com.toedter.calendar.JDateChooser();
        cCB = new javax.swing.JComboBox<>();
        fCB = new javax.swing.JComboBox<>();
        tCB = new javax.swing.JComboBox<>();
        adDC = new com.toedter.calendar.JDateChooser();
        cCB1 = new javax.swing.JComboBox<>();
        fCB1 = new javax.swing.JComboBox<>();
        tCB1 = new javax.swing.JComboBox<>();
        db1DC = new com.toedter.calendar.JDateChooser();
        db2DC = new com.toedter.calendar.JDateChooser();
        db3DC = new com.toedter.calendar.JDateChooser();
        db4DC = new com.toedter.calendar.JDateChooser();
        db5DC = new com.toedter.calendar.JDateChooser();
        jLabel72 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblHeader5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fnTFR = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        addTFR = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        coTFR = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ciTFR = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        teTFR = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        pcTFR = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        emTFR = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        fTFR = new javax.swing.JTextField();
        lblHeader6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cfTAR = new javax.swing.JTextArea();
        lblHeader7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pfnTFR = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        nTAR = new javax.swing.JTextArea();
        updateBTN1 = new javax.swing.JButton();
        deleteBTN2 = new javax.swing.JButton();
        clearBTN1 = new javax.swing.JButton();
        exitBTN2 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jScrollPane18 = new javax.swing.JScrollPane();
        jTable9 = new javax.swing.JTable();
        jLabel43 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jScrollPane22 = new javax.swing.JScrollPane();
        jTable10 = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jScrollPane20 = new javax.swing.JScrollPane();
        jTable11 = new javax.swing.JTable();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTable12 = new javax.swing.JTable();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jScrollPane26 = new javax.swing.JScrollPane();
        jTable13 = new javax.swing.JTable();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jScrollPane23 = new javax.swing.JScrollPane();
        jTable14 = new javax.swing.JTable();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jScrollPane24 = new javax.swing.JScrollPane();
        jTable15 = new javax.swing.JTable();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTable16 = new javax.swing.JTable();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setForeground(new java.awt.Color(0, 204, 204));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(821, 1404));

        lblHeader3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader3.setText("Customer Data");

        lblFN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFN.setText("First Name");

        lblLN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblLN.setText("Last Name");

        lblADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblADD.setText("Address");

        lblCI.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCI.setText("City");

        lblCO.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCO.setText("Country");

        lblTEL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTEL.setText("Telephone");

        lblPC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPC.setText("Postal Code");

        lblEM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEM.setText("E-mail");

        lblF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblF.setText("Fax");

        lblHeader4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader4.setText("Itinerary");

        owtCB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        owtCB.setText("One-Way Trip");
        owtCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                owtCBActionPerformed(evt);
            }
        });

        lblDD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDD.setText("Departing Date");

        lblFLN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFLN.setText("Flight Number");

        lblC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblC.setText("Class");

        lblFR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFR.setText("From");

        lblT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblT.setText("To");

        rtCB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rtCB.setText("Round Trip");
        rtCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtCBActionPerformed(evt);
            }
        });

        lblAD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAD.setText("Arrival Date");

        lblFLNB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFLNB.setText("Flight Number");

        lblCB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCB.setText("Class");

        lblFRB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFRB.setText("From");

        lblTB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTB.setText("To");

        lblCF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCF.setText("Comment Field");

        lbHeader5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbHeader5.setText("Passengers");

        lblNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNo.setText("No.");

        lblLNB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblLNB.setText("Last Name");

        lblFNB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFNB.setText("First Name");

        lblDOB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDOB.setText("Date of Birth");

        lblNo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNo1.setText("1");

        lblNo2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNo2.setText("2");

        lblNo3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNo3.setText("3");

        lblNo4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNo4.setText("4");

        lblNo5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNo5.setText("5");

        lblN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblN.setText("Notes");

        lblBD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBD.setText("Booking Date");

        submitBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitBTN.setText("Submit");
        submitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBTNActionPerformed(evt);
            }
        });

        clearBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearBTN.setText("Clear");
        clearBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBTNActionPerformed(evt);
            }
        });

        exitBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        exitBTN.setText("Exit");
        exitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTNActionPerformed(evt);
            }
        });

        cfTA.setColumns(20);
        cfTA.setRows(5);
        jScrollPane2.setViewportView(cfTA);

        nTA.setColumns(20);
        nTA.setRows(5);
        jScrollPane3.setViewportView(nTA);

        bdDC.setDateFormatString("yyyy-MM-dd");

        ddDC.setDateFormatString("yyyy-MM-dd");

        cCB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ECONOMY", "BUSINESS", "FIRST" }));
        cCB.setSelectedIndex(-1);
        cCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCBActionPerformed(evt);
            }
        });

        fCB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MNL - Ninoy Aquino International Airport", "CEB - Mactan Cebu International Airport", "CRK - Diosdado Macapagal International Airport", "DVO - Francisco Bangoy International Airport", "CGY - Laguindingan Airport", "KLO - Kalibo International Airport", "PPS - Puerto Princesa Airport", "TAC - Daniel Z. Romualdez Airport", "LGP - Legazpi City International Airport", "CBO - Awang Airport", "BXU - Bancasi Airport", "GES - General Santos International Airport", "SUG - Surigao Airport", "ZAM - Zamboanga International Airport", "TUG - Tuguegarao Airport", "BCD - Bacolod-Silay Airport", "DGT - Sibulan Airport", "MPH - Godofredo P. Ramos Airport", "ILO - Iloilo International Airport", "RXS - Roxas Airport", "TGB - Tagbilaran Airport", "LAO - Laoag International Airport", "DPL - Dipolog Airport", "WNP - Naga Airport", "BSO - Basco Airport", "CRM - Catarman National Airport", "USU - Francisco B. Reyes Airport", "CGM - Camiguin Airport", "JOL - Jolo Airport", "PAG - Pagadian Airport" }));
        fCB.setSelectedIndex(-1);

        tCB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MNL - Ninoy Aquino International Airport", "CEB - Mactan Cebu International Airport", "CRK - Diosdado Macapagal International Airport", "DVO - Francisco Bangoy International Airport", "CGY - Laguindingan Airport", "KLO - Kalibo International Airport", "PPS - Puerto Princesa Airport", "TAC - Daniel Z. Romualdez Airport", "LGP - Legazpi City International Airport", "CBO - Awang Airport", "BXU - Bancasi Airport", "GES - General Santos International Airport", "SUG - Surigao Airport", "ZAM - Zamboanga International Airport", "TUG - Tuguegarao Airport", "BCD - Bacolod-Silay Airport", "DGT - Sibulan Airport", "MPH - Godofredo P. Ramos Airport", "ILO - Iloilo International Airport", "RXS - Roxas Airport", "TGB - Tagbilaran Airport", "LAO - Laoag International Airport", "DPL - Dipolog Airport", "WNP - Naga Airport", "BSO - Basco Airport", "CRM - Catarman National Airport", "USU - Francisco B. Reyes Airport", "CGM - Camiguin Airport", "JOL - Jolo Airport", "PAG - Pagadian Airport" }));
        tCB.setSelectedIndex(-1);

        adDC.setDateFormatString("yyyy-MM-dd");

        cCB1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ECONOMY", "BUSINESS", "FIRST" }));
        cCB1.setSelectedIndex(-1);
        cCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCB1ActionPerformed(evt);
            }
        });

        fCB1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MNL - Ninoy Aquino International Airport", "CEB - Mactan Cebu International Airport", "CRK - Diosdado Macapagal International Airport", "DVO - Francisco Bangoy International Airport", "CGY - Laguindingan Airport", "KLO - Kalibo International Airport", "PPS - Puerto Princesa Airport", "TAC - Daniel Z. Romualdez Airport", "LGP - Legazpi City International Airport", "CBO - Awang Airport", "BXU - Bancasi Airport", "GES - General Santos International Airport", "SUG - Surigao Airport", "ZAM - Zamboanga International Airport", "TUG - Tuguegarao Airport", "BCD - Bacolod-Silay Airport", "DGT - Sibulan Airport", "MPH - Godofredo P. Ramos Airport", "ILO - Iloilo International Airport", "RXS - Roxas Airport", "TGB - Tagbilaran Airport", "LAO - Laoag International Airport", "DPL - Dipolog Airport", "WNP - Naga Airport", "BSO - Basco Airport", "CRM - Catarman National Airport", "USU - Francisco B. Reyes Airport", "CGM - Camiguin Airport", "JOL - Jolo Airport", "PAG - Pagadian Airport" }));
        fCB1.setSelectedIndex(-1);

        tCB1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MNL - Ninoy Aquino International Airport", "CEB - Mactan Cebu International Airport", "CRK - Diosdado Macapagal International Airport", "DVO - Francisco Bangoy International Airport", "CGY - Laguindingan Airport", "KLO - Kalibo International Airport", "PPS - Puerto Princesa Airport", "TAC - Daniel Z. Romualdez Airport", "LGP - Legazpi City International Airport", "CBO - Awang Airport", "BXU - Bancasi Airport", "GES - General Santos International Airport", "SUG - Surigao Airport", "ZAM - Zamboanga International Airport", "TUG - Tuguegarao Airport", "BCD - Bacolod-Silay Airport", "DGT - Sibulan Airport", "MPH - Godofredo P. Ramos Airport", "ILO - Iloilo International Airport", "RXS - Roxas Airport", "TGB - Tagbilaran Airport", "LAO - Laoag International Airport", "DPL - Dipolog Airport", "WNP - Naga Airport", "BSO - Basco Airport", "CRM - Catarman National Airport", "USU - Francisco B. Reyes Airport", "CGM - Camiguin Airport", "JOL - Jolo Airport", "PAG - Pagadian Airport" }));
        tCB1.setSelectedIndex(-1);

        db1DC.setDateFormatString("yyyy-MM-dd");

        db2DC.setDateFormatString("yyyy-MM-dd");

        db3DC.setDateFormatString("yyyy-MM-dd");

        db4DC.setDateFormatString("yyyy-MM-dd");

        db5DC.setDateFormatString("yyyy-MM-dd");

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(255, 255, 255));
        jLabel72.setText("Air Ticket Booking");

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 255, 255));
        jLabel71.setText("Request System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel72)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel71))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblHeader3))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(lblBD)
                .addGap(21, 21, 21)
                .addComponent(bdDC, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(lblFN)
                .addGap(43, 43, 43)
                .addComponent(fnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblLN)
                .addGap(35, 35, 35)
                .addComponent(lnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(lblADD)
                .addGap(65, 65, 65)
                .addComponent(addTF, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(lblCI)
                .addGap(97, 97, 97)
                .addComponent(ciTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(lblCO)
                .addGap(49, 49, 49)
                .addComponent(coTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(lblTEL)
                .addGap(45, 45, 45)
                .addComponent(telTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(lblPC)
                .addGap(18, 18, 18)
                .addComponent(pcTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(lblEM)
                .addGap(78, 78, 78)
                .addComponent(emTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(lblF)
                .addGap(84, 84, 84)
                .addComponent(fTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblHeader4))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(owtCB))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(lblDD)
                .addGap(18, 18, 18)
                .addComponent(ddDC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(lblFLN)
                .addGap(18, 18, 18)
                .addComponent(flnTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(lblC)
                .addGap(18, 18, 18)
                .addComponent(cCB, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblFR)
                .addGap(27, 27, 27)
                .addComponent(fCB, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblT)
                .addGap(18, 18, 18)
                .addComponent(tCB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(rtCB))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(lblAD)
                .addGap(42, 42, 42)
                .addComponent(adDC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(lblFLNB)
                .addGap(18, 18, 18)
                .addComponent(flnbTF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(lblCB)
                .addGap(18, 18, 18)
                .addComponent(cCB1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblFRB)
                .addGap(30, 30, 30)
                .addComponent(fCB1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblTB)
                .addGap(18, 18, 18)
                .addComponent(tCB1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(lblCF))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lbHeader5))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblNo)
                .addGap(77, 77, 77)
                .addComponent(lblFNB)
                .addGap(176, 176, 176)
                .addComponent(lblLNB, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(176, 176, 176)
                .addComponent(lblDOB))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblNo1)
                .addGap(34, 34, 34)
                .addComponent(fnb1TF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lnb1TF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(db1DC, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblNo2)
                .addGap(34, 34, 34)
                .addComponent(fnb2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lnb2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(db2DC, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblNo3)
                .addGap(34, 34, 34)
                .addComponent(fnb3TF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lnb3TF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(db3DC, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblNo4)
                .addGap(34, 34, 34)
                .addComponent(fnb4TF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lnb4TF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(db4DC, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblNo5)
                .addGap(34, 34, 34)
                .addComponent(fnb5TF, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lnb5TF, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(db5DC, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblN))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(clearBTN)
                .addGap(18, 18, 18)
                .addComponent(submitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitBTN))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel72)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel71)))
                .addComponent(lblHeader3)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBD)
                    .addComponent(bdDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFN)
                    .addComponent(lblLN)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblADD)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(addTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCI)
                    .addComponent(lblCO)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ciTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTEL)
                    .addComponent(lblPC)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(telTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pcTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEM)
                    .addComponent(lblF)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addComponent(lblHeader4)
                .addGap(12, 12, 12)
                .addComponent(owtCB)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFLN)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDD)
                            .addComponent(ddDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flnTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblC)
                    .addComponent(lblFR)
                    .addComponent(lblT)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(rtCB)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFLNB)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAD)
                            .addComponent(adDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flnbTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCB)
                    .addComponent(lblFRB)
                    .addComponent(lblTB)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(lblCF)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(lbHeader5)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblNo))
                    .addComponent(lblFNB)
                    .addComponent(lblLNB)
                    .addComponent(lblDOB))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblNo1))
                    .addComponent(fnb1TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lnb1TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(db1DC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNo2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(fnb2TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lnb2TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(db2DC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lblNo3))
                    .addComponent(fnb3TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lnb3TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(db3DC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblNo4))
                    .addComponent(fnb4TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lnb4TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(db4DC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNo5)
                    .addComponent(db5DC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fnb5TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lnb5TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(17, 17, 17)
                .addComponent(lblN)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clearBTN)
                            .addComponent(exitBTN)))))
        );

        jScrollPane1.setViewportView(jPanel1);

        jTabbedPane1.addTab("Add Record", jScrollPane1);

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setPreferredSize(new java.awt.Dimension(975, 1128));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passenger_Number", "Passenger_Name", "Birth_Date", "Notes", "Customer_ID", "Booking_Date", "Customer_Name", "Customer_Address", "City", "Postal_Code", "Country", "Telephone", "Fax", "E_Mail", "Flight_Number", "Type_Of_Trip", "Departing_Date", "Arrival_Date", "Class", "Departing_From", "Departing_To", "Round_From", "Round_To", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setUpdateSelectionOnSort(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        lblHeader5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader5.setText("Customer Data");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Full Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Address");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("City");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Country");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Telephone");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Postal Code");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("E-mail");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Fax");

        lblHeader6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader6.setText("Itinerary");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Comment Field");

        cfTAR.setColumns(20);
        cfTAR.setRows(5);
        jScrollPane4.setViewportView(cfTAR);

        lblHeader7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHeader7.setText("Passenger Data");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Full Name");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Notes");

        nTAR.setColumns(20);
        nTAR.setRows(5);
        jScrollPane5.setViewportView(nTAR);

        updateBTN1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateBTN1.setText("Update");
        updateBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTN1ActionPerformed(evt);
            }
        });

        deleteBTN2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteBTN2.setText("Delete");
        deleteBTN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTN2ActionPerformed(evt);
            }
        });

        clearBTN1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        clearBTN1.setText("Clear");
        clearBTN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBTN1ActionPerformed(evt);
            }
        });

        exitBTN2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        exitBTN2.setText("Exit");
        exitBTN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTN2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addTFR)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ciTFR, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(teTFR, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emTFR, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(70, 70, 70)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(coTFR, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fTFR, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pcTFR, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(fnTFR)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(37, 37, 37)
                                        .addComponent(pfnTFR))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(0, 600, Short.MAX_VALUE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(58, 58, 58))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel11))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblHeader7))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblHeader6))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblHeader5)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(119, 119, 119))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(clearBTN1)
                .addGap(18, 18, 18)
                .addComponent(updateBTN1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteBTN2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitBTN2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fnTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ciTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(coTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(teTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(pcTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(emTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(fTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblHeader6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblHeader7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pfnTFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBTN1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBTN2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBTN1)
                    .addComponent(exitBTN2))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 843, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        jScrollPane7.setViewportView(jPanel4);

        jTabbedPane1.addTab("Read Record", jScrollPane7);

        jPanel2.setPreferredSize(new java.awt.Dimension(1201, 1333));

        jPanel5.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Easy Problem #1");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer_ID", "Booking_Date", "Customer_Name", "Customer_Address", "City", "Postal_Code", "Country", "Telephone", "Fax", "E_Mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane10.setViewportView(jTable2);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("List all the details of customers that live");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("within Quezon City and Manila City.");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Display");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jLabel15))
                                .addComponent(jLabel14))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addGap(35, 35, 35)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(0, 204, 204));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel16.setText("Easy Problem #2");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Display the flight numbers and class of");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("airplanes that will depart tomorrow.");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Display");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight_Number", "Class"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane12.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel18))
                            .addComponent(jLabel17))
                        .addGap(29, 29, 29))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel16))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addGap(38, 38, 38)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 204, 204));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel19.setText("Easy Problem #3");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("Display the passengers that are");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel21.setText("below 18 years old.");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passenger_Number", "Passenger_Name", "Birth_Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable4.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane13.setViewportView(jTable4);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Display");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel20))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jLabel21))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)
                        .addGap(51, 51, 51)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(0, 204, 204));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel22.setText("Easy Problem #4");

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight_Number", "Type_Of_Trip", "Departing_Date", "Arrival_Date", "Class", "Departing_From", "Departing_To", "Arrival_From", "Arrival_To", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable5.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane14.setViewportView(jTable5);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel23.setText("Display the flight details, which");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel24.setText("are round-trip.");

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Display");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel22))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel24)
                        .addGap(28, 28, 28)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(0, 204, 204));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setText("Easy Problem #5");

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer_Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable6.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane15.setViewportView(jTable6);

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel26.setText("List the name of customers that resides");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel27.setText("outside of Manila and Quezon City.");

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setText("Display");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel25)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel26)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel27)
                        .addGap(37, 37, 37)))
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addGap(36, 36, 36)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(345, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jScrollPane6.setViewportView(jPanel2);

        jTabbedPane1.addTab("Easy Problem", jScrollPane6);

        jPanel10.setBackground(new java.awt.Color(0, 204, 204));
        jPanel10.setPreferredSize(new java.awt.Dimension(1087, 1287));

        jPanel11.setBackground(new java.awt.Color(0, 204, 204));

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight_Number", "Type_Of_Trip", "Departing_Date", "Arrival_Date", "Class", "Departing_From", "Departing_To", "Arrival_From", "Arrival_To", "Comments", "Customer_ID", "Booking_Date", "Customer_Name", "Customer_Address", "City", "Postal_Code", "Country", "Telephone", "Fax", "E_Mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable7.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane16.setViewportView(jTable7);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel28.setText("Average Problem #1");

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setText("Display");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel38.setText("Retrieve the flight details along with the");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel39.setText("customer information for a specific");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel40.setText("flight number.");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel39))))))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel40)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40)
                        .addGap(47, 47, 47)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(0, 204, 204));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel29.setText("Average Problem #2");

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setText("Display");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passenger_Name", "Depating_To"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable8.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane17.setViewportView(jTable8);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel41.setText("Display the passenger's name and their");

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel42.setText("destination, sort by date of flight.");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel42)
                        .addGap(50, 50, 50))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel29))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel41))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel41)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel42)
                        .addGap(48, 48, 48)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(0, 204, 204));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel30.setText("Average Problem #3");

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setText("Display");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTable9.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passenger_Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable9.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane18.setViewportView(jTable9);

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel43.setText("Select the name of the passengers if");

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel47.setText("their type of flight is economy.");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel30))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addGap(43, 43, 43)))))
                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(33, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel47)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );

        jPanel14.setBackground(new java.awt.Color(0, 204, 204));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel31.setText("Average Problem #4");

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton9.setText("Display");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTable10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer_ID", "Booking_Date", "Customer_Name", "Customer_Address", "City", "Postal_Code", "Country", "Telephone", "Fax", "E_Mail", "Flight_Number", "Type_Of_Trip", "Departing_Date", "Arrival_Date", "Class", "Departing_From", "Departing_To", "Arrival_From", "Arrival_To", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable10.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane22.setViewportView(jTable10);

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel48.setText("Retrieve the customer information and");

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel49.setText("their corresponding flight details");

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel50.setText("for the month of July.");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel31))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel48))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel49))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jLabel50))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel50)
                        .addGap(29, 29, 29)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(0, 204, 204));

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel32.setText("Average Problem #5");

        jButton10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton10.setText("Display");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jTable11.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Number_Of_Passengers", "Customer_Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable11.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane20.setViewportView(jTable11);

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel51.setText("Display the number of passengers, group");

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel52.setText("by the name of customer who");

        jLabel53.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel53.setText("availed the ticket.");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel52)
                        .addGap(67, 67, 67))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel51))
                                    .addComponent(jLabel32)))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabel53))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel53)
                        .addGap(31, 31, 31)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(231, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jScrollPane8.setViewportView(jPanel10);

        jTabbedPane1.addTab("Average Problem", jScrollPane8);

        jPanel16.setBackground(new java.awt.Color(0, 204, 204));
        jPanel16.setPreferredSize(new java.awt.Dimension(877, 1358));

        jPanel17.setBackground(new java.awt.Color(0, 204, 204));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel33.setText("Difficult Problem #1");

        jButton11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton11.setText("Display");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTable12.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight_Number", "Type_Of_Trip", "Departing_Date", "Arrival_Date", "Class", "Departing_From", "Departing_To", "Arrival_From", "Arrival_To", "Comments", "Passenger_Number", "Passenger_Name", "Passport_Number", "Expiration_Date_Of_Exit_Visa", "Birth_Date", "Notes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable12.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane19.setViewportView(jTable12);

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel54.setText("Combine the flight table and the passenger");

        jLabel55.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel55.setText("table such that no comments are made");

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel56.setText("by customers in form.");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel55))
                                    .addComponent(jLabel54)
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(jLabel56))))))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel56)
                        .addGap(32, 32, 32)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel18.setBackground(new java.awt.Color(0, 204, 204));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel34.setText("Difficult Problem #2");

        jButton12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton12.setText("Display");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jTable13.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class", "Available_Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable13.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane26.setViewportView(jTable13);

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel44.setText("Add customer tables and passenger");

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel45.setText("tables together to get the number");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel46.setText("of available passengers per class.");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44)
                                    .addGroup(jPanel18Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel46)
                                            .addComponent(jLabel45)))))))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel46)
                        .addGap(28, 28, 28)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel19.setBackground(new java.awt.Color(0, 204, 204));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel35.setText("Difficult Problem #3");

        jButton13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton13.setText("Display");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jTable14.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passenger_Number", "Passenger_Name", "Passport_Number", "Expiration_Date_Of_Exit_Visa", "Birth_Date", "Notes", "Customer_ID", "Booking_Date", "Customer_Name", "Customer_Address", "City", "Postal_Code", "Country", "Telephone", "Fax", "E_Mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable14.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane23.setViewportView(jTable14);

        jLabel57.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel57.setText("Join the passenger and customer tables,");

        jLabel58.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel58.setText("with the passengers' names beginning");

        jLabel59.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel59.setText("with the letter 'M'.");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addGroup(jPanel19Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel57)
                                    .addGroup(jPanel19Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel58))
                                    .addGroup(jPanel19Layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addComponent(jLabel59))))))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel58)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel59)
                        .addGap(35, 35, 35)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel20.setBackground(new java.awt.Color(0, 204, 204));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel36.setText("Difficult Problem #4");

        jButton14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton14.setText("Display");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jTable15.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer_Name", "Total_Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable15.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane24.setViewportView(jTable15);

        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel60.setText("Retrieve the customer name and the total");

        jLabel61.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel61.setText("number of flights they have booked");

        jLabel62.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel62.setText("considering only the flights with at least");

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel63.setText("two passengers. Sort the results by the");

        jLabel64.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel64.setText("total number of flights in descending order.");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel61)
                        .addGap(46, 46, 46))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel20Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel36)
                                        .addGroup(jPanel20Layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel62)
                                                .addComponent(jLabel60)
                                                .addComponent(jLabel63)))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel64)))
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel64)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))))
        );

        jPanel21.setBackground(new java.awt.Color(0, 204, 204));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel37.setText("Difficult Problem #5");

        jButton15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton15.setText("Display");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jTable16.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer_Name", "Flight_Number", "Type_Of_Trip", "Class", "Departing_Date", "Departing_From", "Departing_To", "Arrival_Date", "Round_From", "Round_To", "Comments"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable16.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane25.setViewportView(jTable16);

        jLabel65.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel65.setText("Retrieve the customer name and their ");

        jLabel66.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel66.setText("respective flight details for customers who");

        jLabel67.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel67.setText("have booked round-trip flights.");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel65))
                            .addComponent(jLabel66)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel67))))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel65)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel66)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel16Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );

        jScrollPane9.setViewportView(jPanel16);

        jTabbedPane1.addTab("Difficult Problem", jScrollPane9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1370, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void owtCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_owtCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_owtCBActionPerformed

    private void rtCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rtCBActionPerformed

    private void clear(){
        bdDC.setDate(null);
        fnTF.setText("");
        lnTF.setText("");
        addTF.setText("");
        ciTF.setText("");
        coTF.setText("");
        telTF.setText("");
        pcTF.setText("");
        emTF.setText("");
        fTF.setText("");
        owtCB.setSelected(false);
        ddDC.setDate(null);
        flnTF.setText("");
        cCB.setSelectedIndex(-1);
        fCB.setSelectedIndex(-1);
        tCB.setSelectedIndex(-1);
        rtCB.setSelected(false);
        adDC.setDate(null);
        flnbTF.setText("");
        cCB1.setSelectedIndex(-1);
        fCB1.setSelectedIndex(-1);
        tCB1.setSelectedIndex(-1);
        cfTA.setText("");
        fnb1TF.setText("");
        fnb2TF.setText("");
        fnb3TF.setText("");
        fnb4TF.setText("");
        fnb5TF.setText("");
        lnb1TF.setText("");
        lnb2TF.setText("");
        lnb3TF.setText("");
        lnb4TF.setText("");
        lnb5TF.setText("");
        db1DC.setDate(null);
        db2DC.setDate(null);
        db3DC.setDate(null);
        db4DC.setDate(null);
        db5DC.setDate(null);
        nTA.setText("");
        pfnTFR.setText("");
        nTAR.setText("");
        fnTFR.setText("");
        addTFR.setText("");
        ciTFR.setText("");
        pcTFR.setText("");
        coTFR.setText("");
        teTFR.setText("");
        fTFR.setText("");
        emTFR.setText("");
        cfTAR.setText("");
    }
    
    private void theader(){
        JTableHeader thead = jTable1.getTableHeader();
        thead.setFont(new Font("Tahome",Font.PLAIN, 12));
    }
    
    private void table_update(){
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT * FROM passengers as p, customer as c, flight as f WHERE p.cust_ID = c.cust_ID AND p.flight_No = f.flight_No;");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("passenger_No"));
                    v2.add(rs.getString("pass_Name"));
                    v2.add(rs.getString("birth_Date"));
                    v2.add(rs.getString("Notes"));
                    v2.add(rs.getString("cust_ID"));
                    v2.add(rs.getString("book_Date"));
                    v2.add(rs.getString("cust_Name"));
                    v2.add(rs.getString("cust_Add"));
                    v2.add(rs.getString("city"));
                    v2.add(rs.getString("post_Code"));
                    v2.add(rs.getString("country"));
                    v2.add(rs.getString("telephone"));
                    v2.add(rs.getString("fax"));
                    v2.add(rs.getString("e_Mail"));
                    v2.add(rs.getString("flight_No"));
                    v2.add(rs.getString("type_of_Trip"));
                    v2.add(rs.getString("depart_Date"));
                    v2.add(rs.getString("arrive_Date"));
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("depart_from"));
                    v2.add(rs.getString("depart_to"));
                    v2.add(rs.getString("round_from"));
                    v2.add(rs.getString("round_to"));
                    v2.add(rs.getString("comments"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    private void clearBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBTNActionPerformed
        // TODO add your handling code here:
        bdDC.setDate(null);
        fnTF.setText("");
        lnTF.setText("");
        addTF.setText("");
        ciTF.setText("");
        coTF.setText("");
        telTF.setText("");
        pcTF.setText("");
        emTF.setText("");
        fTF.setText("");
        owtCB.setSelected(false);
        ddDC.setDate(null);
        flnTF.setText("");
        cCB.setSelectedIndex(-1);
        fCB.setSelectedIndex(-1);
        tCB.setSelectedIndex(-1);
        rtCB.setSelected(false);
        adDC.setDate(null);
        flnbTF.setText("");
        cCB1.setSelectedIndex(-1);
        fCB1.setSelectedIndex(-1);
        tCB1.setSelectedIndex(-1);
        cfTA.setText("");
        fnb1TF.setText("");
        fnb2TF.setText("");
        fnb3TF.setText("");
        fnb4TF.setText("");
        fnb5TF.setText("");
        lnb1TF.setText("");
        lnb2TF.setText("");
        lnb3TF.setText("");
        lnb4TF.setText("");
        lnb5TF.setText("");
        db1DC.setDate(null);
        db2DC.setDate(null);
        db3DC.setDate(null);
        db4DC.setDate(null);
        db5DC.setDate(null);
        nTA.setText("");
    }//GEN-LAST:event_clearBTNActionPerformed
private JFrame frame;
    private void exitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTNActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Exit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
        == JOptionPane.YES_OPTION){
                System.exit(0);
        }
    }//GEN-LAST:event_exitBTNActionPerformed

    private void submitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBTNActionPerformed
        // TODO add your handling code here:
        LocalDate date = LocalDate.now();
        if(bdDC.getDate() == null){
            JOptionPane.showMessageDialog(null, "Booking Date Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(new java.sql.Date(bdDC.getDate().getTime()).toLocalDate().compareTo(date) < 0){
            JOptionPane.showMessageDialog(null, "Booking Date Field must be up to current!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(fnTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "First Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(lnTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Last Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(addTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Address Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(ciTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "City Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(coTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Country Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(telTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Telephone Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(pcTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Postal Code Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(emTF.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "E-Mail Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(owtCB.isSelected()){
            if(ddDC.getDate() == null){
                JOptionPane.showMessageDialog(null, "Departing Date Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(flnTF.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "Flight Number Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(cCB.getSelectedItem() == null){
                JOptionPane.showMessageDialog(null, "Class Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(fCB.getSelectedItem() == null){
                JOptionPane.showMessageDialog(null, "From Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(tCB.getSelectedItem() == null){
                JOptionPane.showMessageDialog(null, "To Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(fCB.getSelectedIndex() == tCB.getSelectedIndex()){
                JOptionPane.showMessageDialog(null, "From Field and To Field should not be same!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(rtCB.isSelected()){
                if(adDC.getDate() == null){
                    JOptionPane.showMessageDialog(null, "Arrival Date Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(flnbTF.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Flight Number Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(!flnbTF.getText().equals(flnTF.getText())){
                    JOptionPane.showMessageDialog(null, "Invalid Flight No. in Round Trip!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(cCB1.getSelectedItem() == null){
                    JOptionPane.showMessageDialog(null, "Class Field in Round Trip is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(cCB.getSelectedIndex() != cCB1.getSelectedIndex()){
                    JOptionPane.showMessageDialog(null, "Invalid Class in Round Trip!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(fCB1.getSelectedItem() == null){
                    JOptionPane.showMessageDialog(null, "From Field in Round Trip is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(fCB1.getSelectedIndex() != tCB.getSelectedIndex()){
                    JOptionPane.showMessageDialog(null, "Invalid From in Round Trip!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(tCB1.getSelectedItem() == null){
                    JOptionPane.showMessageDialog(null, "To Field in Round Trip is Empty","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(tCB1.getSelectedIndex() != fCB.getSelectedIndex()){
                    JOptionPane.showMessageDialog(null, "Invalid To in Round Trip!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(fnb1TF.getText().isEmpty() == false){
                    if(lnb1TF.getText().trim().isEmpty()){
                        JOptionPane.showMessageDialog(null, "Last Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                    }else if(db1DC.getDate() == null){
                        JOptionPane.showMessageDialog(null, "Date of Birth Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                    }else if(fnb2TF.getText().isEmpty() == false){
                        if(lnb2TF.getText().trim().isEmpty()){
                            JOptionPane.showMessageDialog(null, "Last Name Field 2 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else if(db2DC.getDate() == null){
                            JOptionPane.showMessageDialog(null, "Date of Birth Field 2 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else if(fnb3TF.getText().isEmpty() == false){
                            if(lnb3TF.getText().trim().isEmpty()){
                                JOptionPane.showMessageDialog(null, "Last Name Field 3 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else if(db3DC.getDate() == null){
                                JOptionPane.showMessageDialog(null, "Date of Birth Field 3 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else if(fnb4TF.getText().isEmpty() == false){
                                if(lnb4TF.getText().trim().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Last Name Field 4 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else if(db4DC.getDate() == null){
                                    JOptionPane.showMessageDialog(null, "Date of Birth Field 4 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else if(fnb5TF.getText().isEmpty() == false){
                                    if(lnb5TF.getText().trim().isEmpty()){
                                        JOptionPane.showMessageDialog(null, "Last Name Field 5 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                                    }else if(db5DC.getDate() == null){
                                        JOptionPane.showMessageDialog(null, "Date of Birth Field 5 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                                        == JOptionPane.YES_OPTION){
                                            try{
                                                Class.forName("com.mysql.cj.jdbc.Driver");
                                                sqlConn = DriverManager.getConnection(dataConn, username, password);
                                            
                                                // passenger 1
                                                long cs = bdDC.getDate().getTime();
                                                java.sql.Date bookD = new java.sql.Date(cs);
                            
                                                pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                                pst.setDate(1, bookD);
                                                pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                                pst.setString(3, addTF.getText());
                                                pst.setString(4,ciTF.getText());
                                                pst.setString(5, pcTF.getText());
                                                pst.setString(6, coTF.getText());
                                                pst.setString(7, telTF.getText());
                                                pst.setString(8, fTF.getText());
                                                pst.setString(9, emTF.getText());
                                                pst.executeUpdate();
                                                
                                                ResultSet custID = pst.getGeneratedKeys();
                                                int maxCustID = 0;
                                                if(custID.next()){
                                                    maxCustID = custID.getInt(1);
                                                }
                                                
                                                long fs = ddDC.getDate().getTime();
                                                java.sql.Date departD = new java.sql.Date(fs);
                                                long fs2 = adDC.getDate().getTime();
                                                java.sql.Date arrD = new java.sql.Date(fs2);
                            
                                                pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,arrive_Date,class,depart_from,depart_to,round_from,round_to,comments,cust_ID)value(?,?,?,?,?,?,?,?,?,?,?)");
                                                pst1.setString(1, flnbTF.getText());
                                                pst1.setString(2, "One-way Trip & Round Trip");
                                                pst1.setDate(3, departD);
                                                pst1.setDate(4, arrD);
                                                pst1.setObject(5, cCB1.getSelectedItem());
                                                pst1.setObject(6, fCB.getSelectedItem());
                                                pst1.setObject(7, tCB.getSelectedItem());
                                                pst1.setObject(8, fCB1.getSelectedItem());
                                                pst1.setObject(9, tCB1.getSelectedItem());
                                                pst1.setString(10, cfTA.getText());
                                                pst1.setInt(11, maxCustID);
                                                pst1.executeUpdate();
                                                

                                                long ps2 = db1DC.getDate().getTime();
                                                java.sql.Date doB = new java.sql.Date(ps2);
                                    
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                                pst2.setDate(2, doB);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                // passenger 2
                                                long ps4 = db2DC.getDate().getTime();
                                                java.sql.Date doB2 = new java.sql.Date(ps4);
                                        
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                                pst2.setDate(2, doB2);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                // passenger 3
                                                long ps6 = db3DC.getDate().getTime();
                                                java.sql.Date doB3 = new java.sql.Date(ps6);
                                        
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb3TF.getText() + " " + lnb3TF.getText());
                                                pst2.setDate(2, doB3);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                // passenger 4
                                                long ps8 = db4DC.getDate().getTime();
                                                java.sql.Date doB4 = new java.sql.Date(ps8);
                                        
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb4TF.getText() + " " + lnb4TF.getText());
                                                pst2.setDate(2, doB4);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                // passenger 5
                                                long ps10 = db5DC.getDate().getTime();
                                                java.sql.Date doB5 = new java.sql.Date(ps10);
                                        
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb5TF.getText() + " " + lnb5TF.getText());
                                                pst2.setDate(2, doB5);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                JOptionPane.showMessageDialog(this, "Record Added");
                                                table_update();
                                                clear();
                                            }catch (ClassNotFoundException ex){
                                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                            }catch (SQLException ex) {
                                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                            }
                                        }
                                    }
                                }else if(fnb5TF.getText().trim().isEmpty()){
                                    if(lnb5TF.getText().isEmpty() == false){
                                        JOptionPane.showMessageDialog(null, "Last Name Field 5 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                                    }else if(db5DC.getDate() != null){
                                        JOptionPane.showMessageDialog(null, "Date of Birth Field 5 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                                    }else{
                                        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                                        == JOptionPane.YES_OPTION){
                                            try{
                                                Class.forName("com.mysql.cj.jdbc.Driver");
                                                sqlConn = DriverManager.getConnection(dataConn, username, password);
                                                
                                                // passenger 1
                                                long cs = bdDC.getDate().getTime();
                                                java.sql.Date bookD = new java.sql.Date(cs);
                            
                                                pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                                pst.setDate(1, bookD);
                                                pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                                pst.setString(3, addTF.getText());
                                                pst.setString(4,ciTF.getText());
                                                pst.setString(5, pcTF.getText());
                                                pst.setString(6, coTF.getText());
                                                pst.setString(7, telTF.getText());
                                                pst.setString(8, fTF.getText());
                                                pst.setString(9, emTF.getText());
                                                pst.executeUpdate();
                                                
                                                ResultSet custID = pst.getGeneratedKeys();
                                                int maxCustID = 0;
                                                if(custID.next()){
                                                    maxCustID = custID.getInt(1);
                                                }
                                                
                                                long fs = ddDC.getDate().getTime();
                                                java.sql.Date departD = new java.sql.Date(fs);
                                                long fs2 = adDC.getDate().getTime();
                                                java.sql.Date arrD = new java.sql.Date(fs2);
                            
                                                pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,arrive_Date,class,depart_from,depart_to,round_from,round_to,comments,cust_ID)value(?,?,?,?,?,?,?,?,?,?,?)");
                                                pst1.setString(1, flnbTF.getText());
                                                pst1.setString(2, "One-way Trip & Round Trip");
                                                pst1.setDate(3, departD);
                                                pst1.setDate(4, arrD);
                                                pst1.setObject(5, cCB1.getSelectedItem());
                                                pst1.setObject(6, fCB.getSelectedItem());
                                                pst1.setObject(7, tCB.getSelectedItem());
                                                pst1.setObject(8, fCB1.getSelectedItem());
                                                pst1.setObject(9, tCB1.getSelectedItem());
                                                pst1.setString(10, cfTA.getText());
                                                pst1.setInt(11, maxCustID);
                                                pst1.executeUpdate();
                                                
                                                long ps2 = db1DC.getDate().getTime();
                                                java.sql.Date doB = new java.sql.Date(ps2);
                                    
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                                pst2.setDate(2, doB);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                // passenger 2
                                                long ps4 = db2DC.getDate().getTime();
                                                java.sql.Date doB2 = new java.sql.Date(ps4);
                                        
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                                pst2.setDate(2, doB2);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                // passenger 3
                                                long ps6 = db3DC.getDate().getTime();
                                                java.sql.Date doB3 = new java.sql.Date(ps6);
                                        
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb3TF.getText() + " " + lnb3TF.getText());
                                                pst2.setDate(2, doB3);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                // passenger 4
                                                long ps8 = db4DC.getDate().getTime();
                                                java.sql.Date doB4 = new java.sql.Date(ps8);
                                        
                                                pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                                pst2.setString(1, fnb4TF.getText() + " " + lnb4TF.getText());
                                                pst2.setDate(2, doB4);
                                                pst2.setString(3, nTA.getText());
                                                pst2.setInt(4, maxCustID);
                                                pst2.setString(5, flnbTF.getText());
                                                pst2.executeUpdate();
                                                
                                                JOptionPane.showMessageDialog(this, "Record Added");
                                                table_update();
                                                clear();
                                            }catch (ClassNotFoundException ex){
                                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                            }catch (SQLException ex) {
                                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                            }
                                        }
                                    }
                                }
                            }else if(fnb4TF.getText().trim().isEmpty()){
                                if(lnb4TF.getText().isEmpty() == false){
                                    JOptionPane.showMessageDialog(null, "Last Name Field 4 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else if(db4DC.getDate() != null){
                                    JOptionPane.showMessageDialog(null, "Date of Birth Field 4 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else{
                                    if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                                    == JOptionPane.YES_OPTION){
                                        try{
                                            Class.forName("com.mysql.cj.jdbc.Driver");
                                            sqlConn = DriverManager.getConnection(dataConn, username, password);
                                        
                                           // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                                
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                                
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                                            long fs2 = adDC.getDate().getTime();
                                            java.sql.Date arrD = new java.sql.Date(fs2);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,arrive_Date,class,depart_from,depart_to,round_from,round_to,comments,cust_ID)value(?,?,?,?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnbTF.getText());
                                            pst1.setString(2, "One-way Trip & Round Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setDate(4, arrD);
                                            pst1.setObject(5, cCB1.getSelectedItem());
                                            pst1.setObject(6, fCB.getSelectedItem());
                                            pst1.setObject(7, tCB.getSelectedItem());
                                            pst1.setObject(8, fCB1.getSelectedItem());
                                            pst1.setObject(9, tCB1.getSelectedItem());
                                            pst1.setString(10, cfTA.getText());
                                            pst1.setInt(11, maxCustID);
                                            pst1.executeUpdate();
                                                
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                    
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnbTF.getText());
                                            pst2.executeUpdate();
                                                
                                            // passenger 2
                                            long ps4 = db2DC.getDate().getTime();
                                            java.sql.Date doB2 = new java.sql.Date(ps4);
                                        
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                            pst2.setDate(2, doB2);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnbTF.getText());
                                            pst2.executeUpdate();
                                                
                                            // passenger 3
                                            long ps6 = db3DC.getDate().getTime();
                                            java.sql.Date doB3 = new java.sql.Date(ps6);
                                        
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb3TF.getText() + " " + lnb3TF.getText());
                                            pst2.setDate(2, doB3);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnbTF.getText());
                                            pst2.executeUpdate();
                                    
                                            JOptionPane.showMessageDialog(this, "Record Added");
                                            table_update();
                                            clear();
                                        }catch (ClassNotFoundException ex){
                                            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                        }catch (SQLException ex) {
                                            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                        }
                                    }
                                }
                            }
                        }else if(fnb3TF.getText().trim().isEmpty()){
                            if(lnb3TF.getText().isEmpty() == false){
                                JOptionPane.showMessageDialog(null, "Last Name Field 3 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else if(db3DC.getDate() != null){
                                JOptionPane.showMessageDialog(null, "Date of Birth Field 3 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else{
                                if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                                == JOptionPane.YES_OPTION){
                                    try{
                                        Class.forName("com.mysql.cj.jdbc.Driver");
                                        sqlConn = DriverManager.getConnection(dataConn, username, password);
                                        
                                            // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                                
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                                
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                                            long fs2 = adDC.getDate().getTime();
                                            java.sql.Date arrD = new java.sql.Date(fs2);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,arrive_Date,class,depart_from,depart_to,round_from,round_to,comments,cust_ID)value(?,?,?,?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnbTF.getText());
                                            pst1.setString(2, "One-way Trip & Round Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setDate(4, arrD);
                                            pst1.setObject(5, cCB1.getSelectedItem());
                                            pst1.setObject(6, fCB.getSelectedItem());
                                            pst1.setObject(7, tCB.getSelectedItem());
                                            pst1.setObject(8, fCB1.getSelectedItem());
                                            pst1.setObject(9, tCB1.getSelectedItem());
                                            pst1.setString(10, cfTA.getText());
                                            pst1.setInt(11, maxCustID);
                                            pst1.executeUpdate();
                                                
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                    
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnbTF.getText());
                                            pst2.executeUpdate();
                                                
                                            // passenger 2
                                            long ps4 = db2DC.getDate().getTime();
                                            java.sql.Date doB2 = new java.sql.Date(ps4);
                                        
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                            pst2.setDate(4, doB2);
                                            pst2.setString(5, nTA.getText());
                                            pst2.setInt(6, maxCustID);
                                            pst2.setString(7, flnbTF.getText());
                                            pst2.executeUpdate();
                                    
                                        JOptionPane.showMessageDialog(this, "Record Added");
                                        table_update();
                                        clear();
                                    }catch (ClassNotFoundException ex){
                                        java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                    }catch (SQLException ex) {
                                        java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                    }
                                }
                            }
                        }
                    }else if(fnb2TF.getText().trim().isEmpty()){
                        if(lnb2TF.getText().isEmpty() == false){
                            JOptionPane.showMessageDialog(null, "Last Name Field 2 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else if(db2DC.getDate() != null){
                            JOptionPane.showMessageDialog(null, "Date of Birth Field 2 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else{
                            if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                            == JOptionPane.YES_OPTION){
                                try{
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    sqlConn = DriverManager.getConnection(dataConn, username, password);
                                            
                                    // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                                
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                                
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                                            long fs2 = adDC.getDate().getTime();
                                            java.sql.Date arrD = new java.sql.Date(fs2);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,arrive_Date,class,depart_from,depart_to,round_from,round_to,comments,cust_ID)value(?,?,?,?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnbTF.getText());
                                            pst1.setString(2, "One-way Trip & Round Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setDate(4, arrD);
                                            pst1.setObject(5, cCB1.getSelectedItem());
                                            pst1.setObject(6, fCB.getSelectedItem());
                                            pst1.setObject(7, tCB.getSelectedItem());
                                            pst1.setObject(8, fCB1.getSelectedItem());
                                            pst1.setObject(9, tCB1.getSelectedItem());
                                            pst1.setString(10, cfTA.getText());
                                            pst1.setInt(11, maxCustID);
                                            pst1.executeUpdate();
                                                
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                    
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnbTF.getText());
                                            pst2.executeUpdate();
                                    
                                    JOptionPane.showMessageDialog(this, "Record Added");
                                    table_update();
                                    clear();
                                }catch (ClassNotFoundException ex){
                                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                }catch (SQLException ex) {
                                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                }else if(fnb1TF.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "You are required to enter atleast one Passenger!","Error!", JOptionPane.ERROR_MESSAGE);
                }
            }else if(adDC.getDate() != null){
                JOptionPane.showMessageDialog(null, "Arrival Date Field should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(flnbTF.getText().isEmpty() == false){
                JOptionPane.showMessageDialog(null, "Flight Number Field should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(cCB1.getSelectedItem() != null){
                JOptionPane.showMessageDialog(null, "Class Field should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(fCB1.getSelectedItem() != null){
                JOptionPane.showMessageDialog(null, "From Field should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(tCB1.getSelectedItem() != null){
                JOptionPane.showMessageDialog(null, "To Field should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
            }else if(fnb1TF.getText().isEmpty() == false){
                if(lnb1TF.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Last Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(db1DC.getDate() == null){
                    JOptionPane.showMessageDialog(null, "Date of Birth Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                }else if(fnb2TF.getText().isEmpty() == false){
                    if(lnb2TF.getText().trim().isEmpty()){
                        JOptionPane.showMessageDialog(null, "Last Name Field 2 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                    }else if(db2DC.getDate() == null){
                        JOptionPane.showMessageDialog(null, "Date of Birth Field 2 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                    }else if(fnb3TF.getText().isEmpty() == false){
                        if(lnb3TF.getText().trim().isEmpty()){
                            JOptionPane.showMessageDialog(null, "Last Name Field 3 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else if(db3DC.getDate() == null){
                            JOptionPane.showMessageDialog(null, "Date of Birth Field 3 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else if(fnb4TF.getText().isEmpty() == false){
                            if(lnb4TF.getText().trim().isEmpty()){
                                JOptionPane.showMessageDialog(null, "Last Name Field 4 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else if(db4DC.getDate() == null){
                                JOptionPane.showMessageDialog(null, "Date of Birth Field 4 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else if(fnb5TF.getText().isEmpty() == false){
                                if(lnb5TF.getText().trim().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Last Name Field 5 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else if(db5DC.getDate() == null){
                                    JOptionPane.showMessageDialog(null, "Date of Birth Field 5 is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else{
                                    if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                                    == JOptionPane.YES_OPTION){
                                        try{
                                            Class.forName("com.mysql.cj.jdbc.Driver");
                                            sqlConn = DriverManager.getConnection(dataConn, username, password);
                                            
                                            // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                            
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                            
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,class,depart_from,depart_to,comments,cust_ID)value(?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnTF.getText());
                                            pst1.setString(2, "One-way Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setObject(4, cCB.getSelectedItem());
                                            pst1.setObject(5, fCB.getSelectedItem());
                                            pst1.setObject(6, tCB.getSelectedItem());
                                            pst1.setString(7, cfTA.getText());
                                            pst1.setInt(8, maxCustID);
                                            pst1.executeUpdate();
                                            
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 2
                                            long ps4 = db2DC.getDate().getTime();
                                            java.sql.Date doB2 = new java.sql.Date(ps4);
                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                            pst2.setDate(2, doB2);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 3
                                            long ps6 = db3DC.getDate().getTime();
                                            java.sql.Date doB3 = new java.sql.Date(ps6);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb3TF.getText() + " " + lnb3TF.getText());
                                            pst2.setDate(2, doB3);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 4
                                            long ps8 = db4DC.getDate().getTime();
                                            java.sql.Date doB4 = new java.sql.Date(ps8);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb4TF.getText() + " " + lnb4TF.getText());
                                            pst2.setDate(2, doB4);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 5
                                            long ps10 = db5DC.getDate().getTime();
                                            java.sql.Date doB5 = new java.sql.Date(ps10);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb5TF.getText() + " " + lnb5TF.getText());
                                            pst2.setDate(2, doB5);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            JOptionPane.showMessageDialog(this, "Record Added");
                                            table_update();
                                            clear();
                                        }catch (ClassNotFoundException ex){
                                            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                        }catch (SQLException ex) {
                                            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                        }
                                    }
                                }
                            }else if(fnb5TF.getText().trim().isEmpty()){
                                if(lnb5TF.getText().isEmpty() == false){
                                    JOptionPane.showMessageDialog(null, "Last Name Field 5 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else if(db5DC.getDate() != null){
                                    JOptionPane.showMessageDialog(null, "Date of Birth Field 5 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                                }else{
                                    if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                                    == JOptionPane.YES_OPTION){
                                        try{
                                            Class.forName("com.mysql.cj.jdbc.Driver");
                                            sqlConn = DriverManager.getConnection(dataConn, username, password);
                                            
                                            // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                            
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                            
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,class,depart_from,depart_to,comments,cust_ID)value(?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnTF.getText());
                                            pst1.setString(2, "One-way Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setObject(4, cCB.getSelectedItem());
                                            pst1.setObject(5, fCB.getSelectedItem());
                                            pst1.setObject(6, tCB.getSelectedItem());
                                            pst1.setString(7, cfTA.getText());
                                            pst1.setInt(8, maxCustID);
                                            pst1.executeUpdate();
                                            
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 2
                                            long ps4 = db2DC.getDate().getTime();
                                            java.sql.Date doB2 = new java.sql.Date(ps4);
                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                            pst2.setDate(2, doB2);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 3
                                            long ps6 = db3DC.getDate().getTime();
                                            java.sql.Date doB3 = new java.sql.Date(ps6);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb3TF.getText() + " " + lnb3TF.getText());
                                            pst2.setDate(2, doB3);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 4
                                            long ps8 = db4DC.getDate().getTime();
                                            java.sql.Date doB4 = new java.sql.Date(ps8);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb4TF.getText() + " " + lnb4TF.getText());
                                            pst2.setDate(2, doB4);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                        
                                            JOptionPane.showMessageDialog(this, "Record Added");
                                            table_update();
                                            clear();
                                            }catch (ClassNotFoundException ex){
                                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                            }catch (SQLException ex) {
                                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                            }
                                        }
                                    }
                            }
                        }else if(fnb4TF.getText().trim().isEmpty()){
                            if(lnb4TF.getText().isEmpty() == false){
                                JOptionPane.showMessageDialog(null, "Last Name Field 4 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else if(db4DC.getDate() != null){
                                JOptionPane.showMessageDialog(null, "Date of Birth Field 4 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                            }else{
                                if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                                == JOptionPane.YES_OPTION){
                                    try{
                                        Class.forName("com.mysql.cj.jdbc.Driver");
                                        sqlConn = DriverManager.getConnection(dataConn, username, password);
                                        
                                        // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                            
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                            
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,class,depart_from,depart_to,comments,cust_ID)value(?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnTF.getText());
                                            pst1.setString(2, "One-way Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setObject(4, cCB.getSelectedItem());
                                            pst1.setObject(5, fCB.getSelectedItem());
                                            pst1.setObject(6, tCB.getSelectedItem());
                                            pst1.setString(7, cfTA.getText());
                                            pst1.setInt(8, maxCustID);
                                            pst1.executeUpdate();
                                            
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 2
                                            long ps4 = db2DC.getDate().getTime();
                                            java.sql.Date doB2 = new java.sql.Date(ps4);
                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                            pst2.setDate(2, doB2);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 3
                                            long ps6 = db3DC.getDate().getTime();
                                            java.sql.Date doB3 = new java.sql.Date(ps6);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb3TF.getText() + " " + lnb3TF.getText());
                                            pst2.setDate(2, doB3);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                        JOptionPane.showMessageDialog(this, "Record Added");
                                        table_update();
                                        clear();
                                    }catch (ClassNotFoundException ex){
                                        java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                    }catch (SQLException ex) {
                                        java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                    }
                                }
                            }
                        }    
                    }else if(fnb3TF.getText().trim().isEmpty()){
                        if(lnb3TF.getText().isEmpty() == false){
                            JOptionPane.showMessageDialog(null, "Last Name Field 3 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else if(db3DC.getDate() != null){
                            JOptionPane.showMessageDialog(null, "Date of Birth Field 3 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                        }else{
                            if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                            == JOptionPane.YES_OPTION){
                                try{
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    sqlConn = DriverManager.getConnection(dataConn, username, password);
                                    
                                    // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                            
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                            
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,class,depart_from,depart_to,comments,cust_ID)value(?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnTF.getText());
                                            pst1.setString(2, "One-way Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setObject(4, cCB.getSelectedItem());
                                            pst1.setObject(5, fCB.getSelectedItem());
                                            pst1.setObject(6, tCB.getSelectedItem());
                                            pst1.setString(7, cfTA.getText());
                                            pst1.setInt(8, maxCustID);
                                            pst1.executeUpdate();
                                            
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                            
                                            // passenger 2
                                            long ps4 = db2DC.getDate().getTime();
                                            java.sql.Date doB2 = new java.sql.Date(ps4);
                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb2TF.getText() + " " + lnb2TF.getText());
                                            pst2.setDate(2, doB2);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                    
                                    JOptionPane.showMessageDialog(this, "Record Added");
                                    table_update();
                                    clear();
                                }catch (ClassNotFoundException ex){
                                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                }catch (SQLException ex) {
                                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                                }
                            }
                        }
                    }
                }else if(fnb2TF.getText().trim().isEmpty()){
                    if(lnb2TF.getText().isEmpty() == false){
                        JOptionPane.showMessageDialog(null, "Last Name Field 2 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                    }else if(db2DC.getDate() != null){
                        JOptionPane.showMessageDialog(null, "Date of Birth Field 2 should not be filled!","Error!", JOptionPane.ERROR_MESSAGE);
                    }else{
                        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Submit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                        == JOptionPane.YES_OPTION){
                            try{
                                Class.forName("com.mysql.cj.jdbc.Driver");
                                sqlConn = DriverManager.getConnection(dataConn, username, password);
                                
                                // passenger 1
                                            long cs = bdDC.getDate().getTime();
                                            java.sql.Date bookD = new java.sql.Date(cs);
                            
                                            pst = sqlConn.prepareStatement("insert into customer(book_Date,cust_Name,cust_Add,city,post_Code,country,telephone,fax,e_Mail)value(?,?,?,?,?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                                            pst.setDate(1, bookD);
                                            pst.setString(2, fnTF.getText() + " " + lnTF.getText());
                                            pst.setString(3, addTF.getText());
                                            pst.setString(4,ciTF.getText());
                                            pst.setString(5, pcTF.getText());
                                            pst.setString(6, coTF.getText());
                                            pst.setString(7, telTF.getText());
                                            pst.setString(8, fTF.getText());
                                            pst.setString(9, emTF.getText());
                                            pst.executeUpdate();
                                            
                                            ResultSet custID = pst.getGeneratedKeys();
                                            int maxCustID = 0;
                                            if(custID.next()){
                                                maxCustID = custID.getInt(1);
                                            }
                                            
                                            long fs = ddDC.getDate().getTime();
                                            java.sql.Date departD = new java.sql.Date(fs);
                            
                                            pst1 = sqlConn.prepareStatement("insert into flight(flight_No,type_of_Trip,depart_Date,class,depart_from,depart_to,comments,cust_ID))value(?,?,?,?,?,?,?,?)");
                                            pst1.setString(1, flnTF.getText());
                                            pst1.setString(2, "One-way Trip");
                                            pst1.setDate(3, departD);
                                            pst1.setObject(4, cCB.getSelectedItem());
                                            pst1.setObject(5, fCB.getSelectedItem());
                                            pst1.setObject(6, tCB.getSelectedItem());
                                            pst1.setString(7, cfTA.getText());
                                            pst1.setInt(8, maxCustID);
                                            pst1.executeUpdate();
                                            
                                            long ps2 = db1DC.getDate().getTime();
                                            java.sql.Date doB = new java.sql.Date(ps2);
                                            
                                            pst2 = sqlConn.prepareStatement("insert into passengers(pass_Name,birth_Date,Notes,cust_ID,flight_No)value(?,?,?,?,?)");
                                            pst2.setString(1, fnb1TF.getText() + " " + lnb1TF.getText());
                                            pst2.setDate(2, doB);
                                            pst2.setString(3, nTA.getText());
                                            pst2.setInt(4, maxCustID);
                                            pst2.setString(5, flnTF.getText());
                                            pst2.executeUpdate();
                                
                                JOptionPane.showMessageDialog(this, "Record Added");
                                table_update();
                                clear();
                            }catch (ClassNotFoundException ex){
                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            }catch (SQLException ex) {
                                java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            }else if(fnb1TF.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(null, "You are required to enter atleast one Passenger!","Error!", JOptionPane.ERROR_MESSAGE);
            }
        }else if(owtCB.isSelected() == false){
            JOptionPane.showMessageDialog(null, "You are required to check the One-Way Trip!","Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitBTNActionPerformed

    private void cCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cCBActionPerformed

    private void cCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cCB1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
        int selectedIndex = jTable1.getSelectedRow();
        
        pfnTFR.setText(Df.getValueAt(selectedIndex, 1).toString());
        nTAR.setText(Df.getValueAt(selectedIndex, 3).toString());
        fnTFR.setText(Df.getValueAt(selectedIndex, 6).toString());
        addTFR.setText(Df.getValueAt(selectedIndex,7).toString());
        ciTFR.setText(Df.getValueAt(selectedIndex, 8).toString());
        pcTFR.setText(Df.getValueAt(selectedIndex, 9).toString());
        coTFR.setText(Df.getValueAt(selectedIndex, 10).toString());
        teTFR.setText(Df.getValueAt(selectedIndex, 11).toString());
        fTFR.setText(Df.getValueAt(selectedIndex, 12).toString());
        emTFR.setText(Df.getValueAt(selectedIndex, 13).toString());
        cfTAR.setText(Df.getValueAt(selectedIndex, 23).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void updateBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTN1ActionPerformed
        // TODO add your handling code here:
        if(fnTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Customer Full Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(addTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Address Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(ciTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "City Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(pcTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Postal Code Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(coTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Country Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(teTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Telephone Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(emTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "E-Mail Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(pfnTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Passenger Full Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else{
            if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Update?","Booking Request Form", JOptionPane.YES_NO_OPTION)
                        == JOptionPane.YES_OPTION){
        
                DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
                int selectedIndex = jTable1.getSelectedRow();
        
                try{
                    int passNum = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
                    int custID = Integer.parseInt(Df.getValueAt(selectedIndex, 6).toString());
                    String flightNum = Df.getValueAt(selectedIndex, 16).toString();
                    
                    String passFullName = pfnTFR.getText();
                    String notes = nTAR.getText();
                
                    String custName = fnTFR.getText();
                    String custAdd = addTFR.getText();
                    String city = ciTFR.getText();
                    String postCode = pcTFR.getText();
                    String country = coTFR.getText();
                    String tel = teTFR.getText();
                    String fax = fTFR.getText();
                    String eMail = emTFR.getText();
                
                    String comments = cfTAR.getText();
                
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    sqlConn = DriverManager.getConnection(dataConn, username, password);
                
                    pst = sqlConn.prepareStatement("update passengers set pass_Name = ?, Notes = ? where passenger_No = ?");
                    pst.setString(1, passFullName);
                    pst.setString(2, notes);
                    pst.setInt(3, passNum);
                    pst.executeUpdate();
                
                    pst1 = sqlConn.prepareStatement("update customer set cust_Name = ?, cust_Add = ?, city = ?, post_Code = ?, country = ?, telephone = ?, fax = ?, e_Mail = ? where cust_ID = ?");
                    pst1.setString(1, custName);
                    pst1.setString(2, custAdd);
                    pst1.setString(3, city);
                    pst1.setString(4, postCode);
                    pst1.setString(5, country);
                    pst1.setString(6, tel);
                    pst1.setString(7, fax);
                    pst1.setString(8, eMail);
                    pst1.setInt(9, custID);
                    pst1.executeUpdate();
                
                    pst2 = sqlConn.prepareStatement("update flight set comments = ? where flight_No = ?");
                    pst2.setString(1, comments);
                    pst2.setString(2, flightNum);
                    pst2.executeUpdate();
                
                    JOptionPane.showMessageDialog(this, "Record Updated");
                    table_update();         
                    clear();
                }catch (ClassNotFoundException ex){
                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_updateBTN1ActionPerformed

    private void deleteBTN2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTN2ActionPerformed
        // TODO add your handling code here:
        if(fnTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Customer Full Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(addTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Address Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(ciTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "City Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(pcTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Postal Code Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(coTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Country Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(teTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Telephone Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(emTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "E-Mail Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else if(pfnTFR.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Passenger Full Name Field is Empty!","Error!", JOptionPane.ERROR_MESSAGE);
        }else{
            if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Delete?","Warning", JOptionPane.YES_NO_OPTION)
                        == JOptionPane.YES_OPTION){
                DefaultTableModel Df = (DefaultTableModel)jTable1.getModel();
                int selectedIndex = jTable1.getSelectedRow();
            
                try{
                    int passNum = Integer.parseInt(Df.getValueAt(selectedIndex, 0).toString());
                
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    sqlConn = DriverManager.getConnection(dataConn, username, password);
                
                    pst = sqlConn.prepareStatement("delete from passengers where passenger_No = ?");
                    pst.setInt(1, passNum);
                    pst.executeUpdate();
                
                    pst1 = sqlConn.prepareStatement("delete from customer where cust_ID = ?");
                    pst1.setInt(1, passNum);
                    pst1.executeUpdate();
                
                    pst2 = sqlConn.prepareStatement("delete from flight where flight_No = ?");
                    pst2.setInt(1, passNum);
                    pst2.executeUpdate();
                
                    JOptionPane.showMessageDialog(this, "Record Deleted");
                    table_update();      
                    clear();
                }catch (ClassNotFoundException ex){
                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }catch (SQLException ex) {
                    java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_deleteBTN2ActionPerformed

    private void clearBTN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBTN1ActionPerformed
        // TODO add your handling code here:
        pfnTFR.setText("");
        nTAR.setText("");
        fnTFR.setText("");
        addTFR.setText("");
        ciTFR.setText("");
        pcTFR.setText("");
        coTFR.setText("");
        teTFR.setText("");
        fTFR.setText("");
        emTFR.setText("");
        cfTAR.setText("");
    }//GEN-LAST:event_clearBTN1ActionPerformed

    private void exitBTN2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTN2ActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame,"Confirm if you want to Exit?","Booking Request Form", JOptionPane.YES_NO_OPTION)
        == JOptionPane.YES_OPTION){
                System.exit(0);
        }
    }//GEN-LAST:event_exitBTN2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT * FROM customer WHERE city LIKE '%Quezon%' OR city LIKE '%Manila%';");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable2.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("cust_ID"));
                    v2.add(rs.getString("book_Date"));
                    v2.add(rs.getString("cust_Name"));
                    v2.add(rs.getString("cust_Add"));
                    v2.add(rs.getString("city"));
                    v2.add(rs.getString("post_Code"));
                    v2.add(rs.getString("country"));
                    v2.add(rs.getString("telephone"));
                    v2.add(rs.getString("fax"));
                    v2.add(rs.getString("e_Mail"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT flight_No, class FROM flight WHERE depart_Date = adddate(curdate(), interval 1 day);");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable3.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("flight_No"));
                    v2.add(rs.getString("class"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT passenger_No, pass_Name, birth_Date FROM passengers WHERE (year(curdate()) - year(birth_Date)) < 18;");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable4.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("passenger_No"));
                    v2.add(rs.getString("pass_Name"));
                    v2.add(rs.getString("birth_Date"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT * FROM flight WHERE type_of_Trip LIKE '%Round Trip%';");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable5.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("flight_No"));
                    v2.add(rs.getString("type_of_Trip"));
                    v2.add(rs.getString("depart_Date"));
                    v2.add(rs.getString("arrive_Date"));
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("depart_from"));
                    v2.add(rs.getString("depart_to"));
                    v2.add(rs.getString("round_from"));
                    v2.add(rs.getString("round_to"));
                    v2.add(rs.getString("comments"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT  cust_Name FROM customer WHERE city NOT LIKE '%Manila%' AND city NOT LIKE '%Quezon%';");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable6.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("cust_Name"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT * FROM flight as f, customer as c WHERE f.cust_ID = c.cust_ID;");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable7.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("flight_No"));
                    v2.add(rs.getString("type_of_Trip"));
                    v2.add(rs.getString("depart_Date"));
                    v2.add(rs.getString("arrive_Date"));
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("depart_from"));
                    v2.add(rs.getString("depart_to"));
                    v2.add(rs.getString("round_from"));
                    v2.add(rs.getString("round_to"));
                    v2.add(rs.getString("comments"));
                    v2.add(rs.getString("cust_ID"));
                    v2.add(rs.getString("book_Date"));
                    v2.add(rs.getString("cust_Name"));
                    v2.add(rs.getString("cust_Add"));
                    v2.add(rs.getString("city"));
                    v2.add(rs.getString("post_Code"));
                    v2.add(rs.getString("country"));
                    v2.add(rs.getString("telephone"));
                    v2.add(rs.getString("fax"));
                    v2.add(rs.getString("e_Mail"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT pass_Name, depart_to FROM passengers as p, flight as f WHERE p.flight_No = f.flight_No ORDER BY depart_Date;");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable8.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("pass_Name"));
                    v2.add(rs.getString("depart_to"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT pass_Name FROM passengers as p, flight as f WHERE p.flight_No = f.flight_No AND class LIKE '%ECONOMY%'");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable9.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("pass_Name"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT * FROM customer as c, flight as f WHERE c.cust_ID = f.cust_ID AND month(depart_Date) = 7;");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable10.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("cust_ID"));
                    v2.add(rs.getString("book_Date"));
                    v2.add(rs.getString("cust_Name"));
                    v2.add(rs.getString("cust_Add"));
                    v2.add(rs.getString("city"));
                    v2.add(rs.getString("post_Code"));
                    v2.add(rs.getString("country"));
                    v2.add(rs.getString("telephone"));
                    v2.add(rs.getString("fax"));
                    v2.add(rs.getString("e_Mail"));
                    v2.add(rs.getString("flight_No"));
                    v2.add(rs.getString("type_of_Trip"));
                    v2.add(rs.getString("depart_Date"));
                    v2.add(rs.getString("arrive_Date"));
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("depart_from"));
                    v2.add(rs.getString("depart_to"));
                    v2.add(rs.getString("round_from"));
                    v2.add(rs.getString("round_to"));
                    v2.add(rs.getString("comments"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT COUNT(*) as Number_Of_Passengers, cust_Name FROM passengers as p, customer as c WHERE p.cust_ID = c.cust_ID GROUP BY cust_Name;");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable11.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("Number_Of_Passengers"));
                    v2.add(rs.getString("cust_Name"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT * FROM flight as f, passengers as p WHERE f.flight_No = p.flight_No AND comments LIKE '';");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable12.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("flight_No"));
                    v2.add(rs.getString("type_of_Trip"));
                    v2.add(rs.getString("depart_Date"));
                    v2.add(rs.getString("arrive_Date"));
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("depart_from"));
                    v2.add(rs.getString("depart_to"));
                    v2.add(rs.getString("round_from"));
                    v2.add(rs.getString("round_to"));
                    v2.add(rs.getString("comments"));
                    v2.add(rs.getString("passenger_No"));
                    v2.add(rs.getString("pass_Name"));
                    v2.add(rs.getString("passport_Data"));
                    v2.add(rs.getString("exp_Visa"));
                    v2.add(rs.getString("birth_Date"));
                    v2.add(rs.getString("Notes"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT class, COUNT(*) AS Available_Passengers FROM passengers as p, customer as c, flight as f WHERE p.cust_ID = c.cust_ID AND f.cust_ID = c.cust_ID GROUP BY class;");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable13.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("Available_Passengers"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT * FROM passengers as p , customer as c WHERE p.cust_ID = c.cust_ID AND pass_Name LIKE 'M%';");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable14.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("passenger_No"));
                    v2.add(rs.getString("pass_Name"));
                    v2.add(rs.getString("passport_Data"));
                    v2.add(rs.getString("exp_Visa"));
                    v2.add(rs.getString("birth_Date"));
                    v2.add(rs.getString("Notes"));
                    v2.add(rs.getString("cust_ID"));
                    v2.add(rs.getString("book_Date"));
                    v2.add(rs.getString("cust_Name"));
                    v2.add(rs.getString("cust_Add"));
                    v2.add(rs.getString("city"));
                    v2.add(rs.getString("post_Code"));
                    v2.add(rs.getString("country"));
                    v2.add(rs.getString("telephone"));
                    v2.add(rs.getString("fax"));
                    v2.add(rs.getString("e_Mail"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT cust_Name,  COUNT(*) AS Total_Flights FROM customer as c, passengers as p WHERE c.cust_ID = p.cust_ID GROUP BY c.cust_ID HAVING Total_Flights >= 2 ORDER BY Total_Flights DESC; ");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable15.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("cust_Name"));
                    v2.add(rs.getString("Total_Flights"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        int c;
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn, username, password);
            
            pst = sqlConn.prepareStatement("SELECT cust_Name, f.flight_No, type_of_Trip, class, depart_Date, depart_from, depart_to, arrive_Date, round_from, round_to, comments FROM customer AS c, flight as f WHERE c.cust_ID = f.cust_ID AND type_of_Trip LIKE '%Round Trip%';");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)jTable16.getModel();
            Df.setRowCount(0);
            
            while(rs.next()){
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++){
                    v2.add(rs.getString("cust_Name"));
                    v2.add(rs.getString("f.flight_No"));
                    v2.add(rs.getString("type_of_Trip"));
                    v2.add(rs.getString("class"));
                    v2.add(rs.getString("depart_Date"));
                    v2.add(rs.getString("depart_from"));
                    v2.add(rs.getString("depart_to"));
                    v2.add(rs.getString("arrive_Date"));
                    v2.add(rs.getString("round_from"));
                    v2.add(rs.getString("round_to"));
                    v2.add(rs.getString("comments"));
                }
                Df.addRow(v2);
            }
        }catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Forms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Forms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser adDC;
    private javax.swing.JTextField addTF;
    private javax.swing.JTextField addTFR;
    private com.toedter.calendar.JDateChooser bdDC;
    private javax.swing.JComboBox<String> cCB;
    private javax.swing.JComboBox<String> cCB1;
    private javax.swing.JTextArea cfTA;
    private javax.swing.JTextArea cfTAR;
    private javax.swing.JTextField ciTF;
    private javax.swing.JTextField ciTFR;
    private javax.swing.JButton clearBTN;
    private javax.swing.JButton clearBTN1;
    private javax.swing.JTextField coTF;
    private javax.swing.JTextField coTFR;
    private com.toedter.calendar.JDateChooser db1DC;
    private com.toedter.calendar.JDateChooser db2DC;
    private com.toedter.calendar.JDateChooser db3DC;
    private com.toedter.calendar.JDateChooser db4DC;
    private com.toedter.calendar.JDateChooser db5DC;
    private com.toedter.calendar.JDateChooser ddDC;
    private javax.swing.JButton deleteBTN2;
    private javax.swing.JTextField emTF;
    private javax.swing.JTextField emTFR;
    private javax.swing.JButton exitBTN;
    private javax.swing.JButton exitBTN2;
    private javax.swing.JComboBox<String> fCB;
    private javax.swing.JComboBox<String> fCB1;
    private javax.swing.JTextField fTF;
    private javax.swing.JTextField fTFR;
    private javax.swing.JTextField flnTF;
    private javax.swing.JTextField flnbTF;
    private javax.swing.JTextField fnTF;
    private javax.swing.JTextField fnTFR;
    private javax.swing.JTextField fnb1TF;
    private javax.swing.JTextField fnb2TF;
    private javax.swing.JTextField fnb3TF;
    private javax.swing.JTextField fnb4TF;
    private javax.swing.JTextField fnb5TF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable10;
    private javax.swing.JTable jTable11;
    private javax.swing.JTable jTable12;
    private javax.swing.JTable jTable13;
    private javax.swing.JTable jTable14;
    private javax.swing.JTable jTable15;
    private javax.swing.JTable jTable16;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    private javax.swing.JTable jTable9;
    private javax.swing.JLabel lbHeader5;
    private javax.swing.JLabel lblAD;
    private javax.swing.JLabel lblADD;
    private javax.swing.JLabel lblBD;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblCB;
    private javax.swing.JLabel lblCF;
    private javax.swing.JLabel lblCI;
    private javax.swing.JLabel lblCO;
    private javax.swing.JLabel lblDD;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblEM;
    private javax.swing.JLabel lblF;
    private javax.swing.JLabel lblFLN;
    private javax.swing.JLabel lblFLNB;
    private javax.swing.JLabel lblFN;
    private javax.swing.JLabel lblFNB;
    private javax.swing.JLabel lblFR;
    private javax.swing.JLabel lblFRB;
    private javax.swing.JLabel lblHeader3;
    private javax.swing.JLabel lblHeader4;
    private javax.swing.JLabel lblHeader5;
    private javax.swing.JLabel lblHeader6;
    private javax.swing.JLabel lblHeader7;
    private javax.swing.JLabel lblLN;
    private javax.swing.JLabel lblLNB;
    private javax.swing.JLabel lblN;
    private javax.swing.JLabel lblNo;
    private javax.swing.JLabel lblNo1;
    private javax.swing.JLabel lblNo2;
    private javax.swing.JLabel lblNo3;
    private javax.swing.JLabel lblNo4;
    private javax.swing.JLabel lblNo5;
    private javax.swing.JLabel lblPC;
    private javax.swing.JLabel lblT;
    private javax.swing.JLabel lblTB;
    private javax.swing.JLabel lblTEL;
    private javax.swing.JTextField lnTF;
    private javax.swing.JTextField lnb1TF;
    private javax.swing.JTextField lnb2TF;
    private javax.swing.JTextField lnb3TF;
    private javax.swing.JTextField lnb4TF;
    private javax.swing.JTextField lnb5TF;
    private javax.swing.JTextArea nTA;
    private javax.swing.JTextArea nTAR;
    private javax.swing.JCheckBox owtCB;
    private javax.swing.JTextField pcTF;
    private javax.swing.JTextField pcTFR;
    private javax.swing.JTextField pfnTFR;
    private javax.swing.JCheckBox rtCB;
    private javax.swing.JButton submitBTN;
    private javax.swing.JComboBox<String> tCB;
    private javax.swing.JComboBox<String> tCB1;
    private javax.swing.JTextField teTFR;
    private javax.swing.JTextField telTF;
    private javax.swing.JButton updateBTN1;
    // End of variables declaration//GEN-END:variables
}
